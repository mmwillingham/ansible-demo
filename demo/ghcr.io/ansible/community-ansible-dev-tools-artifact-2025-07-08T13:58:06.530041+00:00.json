{
    "plays": [],
    "settings_entries": {
        "ansible-navigator": {
            "ansible": {
                "cmdline": "--ee-image bash",
                "config": {
                    "help": false
                },
                "doc": {
                    "help": false,
                    "plugin": {
                        "type": "module"
                    }
                },
                "inventory": {
                    "entries": [
                        "/home/mwilling/ansible/my_inventory"
                    ],
                    "help": false
                },
                "playbook": {
                    "help": false,
                    "path": "ghcr.io/ansible/community-ansible-dev-tools"
                }
            },
            "ansible-builder": {
                "help": false,
                "workdir": "/home/mwilling/ansible"
            },
            "ansible-runner": {
                "job-events": false
            },
            "app": "run",
            "collection-doc-cache-path": "/home/mwilling/.cache/ansible-navigator/collection_doc_cache.db",
            "color": {
                "enable": true,
                "osc4": true
            },
            "editor": {
                "command": "/usr/bin/vi {filename}",
                "console": true
            },
            "enable-prompts": false,
            "exec": {
                "command": "/bin/bash",
                "shell": true
            },
            "execution-environment": {
                "container-engine": "podman",
                "enabled": true,
                "image": "ghcr.io/ansible/community-ansible-dev-tools:latest",
                "pull": {
                    "policy": "tag"
                }
            },
            "format": "yaml",
            "images": {
                "details": [
                    "everything"
                ]
            },
            "logging": {
                "append": true,
                "file": "/home/mwilling/ansible/ansible-navigator.log",
                "level": "warning"
            },
            "mode": "stdout",
            "playbook-artifact": {
                "enable": true,
                "save-as": "{playbook_dir}/{playbook_name}-artifact-{time_stamp}.json"
            },
            "settings": {
                "effective": false,
                "sample": false,
                "schema": "json",
                "sources": false
            },
            "time-zone": "UTC"
        }
    },
    "settings_sources": {
        "ansible-navigator.ansible-builder.help": "Defaults",
        "ansible-navigator.ansible-builder.workdir": "Defaults",
        "ansible-navigator.ansible-lint.config": "Not set",
        "ansible-navigator.ansible-lint.lintables": "Not set",
        "ansible-navigator.ansible-runner.artifact-dir": "Not set",
        "ansible-navigator.ansible-runner.job-events": "Defaults",
        "ansible-navigator.ansible-runner.rotate-artifacts-count": "Not set",
        "ansible-navigator.ansible-runner.timeout": "Not set",
        "ansible-navigator.ansible.cmdline": "Command line",
        "ansible-navigator.ansible.config.help": "Defaults",
        "ansible-navigator.ansible.config.path": "Not set",
        "ansible-navigator.ansible.doc.help": "Defaults",
        "ansible-navigator.ansible.doc.plugin.name": "Not set",
        "ansible-navigator.ansible.doc.plugin.type": "Defaults",
        "ansible-navigator.ansible.inventory.entries": "Ansible configuration file",
        "ansible-navigator.ansible.inventory.help": "Defaults",
        "ansible-navigator.ansible.playbook.help": "Defaults",
        "ansible-navigator.ansible.playbook.path": "Command line",
        "ansible-navigator.app": "Command line",
        "ansible-navigator.collection-doc-cache-path": "Defaults",
        "ansible-navigator.color.enable": "Defaults",
        "ansible-navigator.color.osc4": "Defaults",
        "ansible-navigator.editor.command": "Defaults",
        "ansible-navigator.editor.console": "Defaults",
        "ansible-navigator.enable-prompts": "Defaults",
        "ansible-navigator.exec.command": "Defaults",
        "ansible-navigator.exec.shell": "Defaults",
        "ansible-navigator.execution-environment.container-engine": "Automatically determined",
        "ansible-navigator.execution-environment.container-options": "Not set",
        "ansible-navigator.execution-environment.enabled": "Defaults",
        "ansible-navigator.execution-environment.environment-variables.pass": "Not set",
        "ansible-navigator.execution-environment.environment-variables.set": "Not set",
        "ansible-navigator.execution-environment.image": "Defaults",
        "ansible-navigator.execution-environment.pull.arguments": "Not set",
        "ansible-navigator.execution-environment.pull.policy": "Defaults",
        "ansible-navigator.execution-environment.volume-mounts": "Not set",
        "ansible-navigator.format": "Defaults",
        "ansible-navigator.images.details": "Defaults",
        "ansible-navigator.inventory-columns": "Not set",
        "ansible-navigator.logging.append": "Defaults",
        "ansible-navigator.logging.file": "Defaults",
        "ansible-navigator.logging.level": "Defaults",
        "ansible-navigator.mode": "Command line",
        "ansible-navigator.playbook-artifact.enable": "Defaults",
        "ansible-navigator.playbook-artifact.replay": "Not set",
        "ansible-navigator.playbook-artifact.save-as": "Defaults",
        "ansible-navigator.settings.effective": "Defaults",
        "ansible-navigator.settings.sample": "Defaults",
        "ansible-navigator.settings.schema": "Defaults",
        "ansible-navigator.settings.sources": "Defaults",
        "ansible-navigator.time-zone": "Defaults",
        "settings_file_path": "None",
        "settings_file_source": "None"
    },
    "status": "failed",
    "status_color": 9,
    "stdout": [
        "usage: ansible-playbook [-h] [--version] [-v] [--private-key PRIVATE_KEY_FILE]",
        "                        [-u REMOTE_USER] [-c CONNECTION] [-T TIMEOUT]",
        "                        [--ssh-common-args SSH_COMMON_ARGS]",
        "                        [--sftp-extra-args SFTP_EXTRA_ARGS]",
        "                        [--scp-extra-args SCP_EXTRA_ARGS]",
        "                        [--ssh-extra-args SSH_EXTRA_ARGS] [-k |",
        "                        --connection-password-file CONNECTION_PASSWORD_FILE]",
        "                        [--force-handlers] [--flush-cache] [-b]",
        "                        [--become-method BECOME_METHOD]",
        "                        [--become-user BECOME_USER] [-K |",
        "                        --become-password-file BECOME_PASSWORD_FILE] [-t TAGS]",
        "                        [--skip-tags SKIP_TAGS] [-C] [-D] [-i INVENTORY]",
        "                        [--list-hosts] [-l SUBSET] [-e EXTRA_VARS]",
        "                        [--vault-id VAULT_IDS] [-J |",
        "                        --vault-password-file VAULT_PASSWORD_FILES] [-f FORKS]",
        "                        [-M MODULE_PATH] [--syntax-check] [--list-tasks]",
        "                        [--list-tags] [--step] [--start-at-task START_AT_TASK]",
        "                        playbook [playbook ...]",
        "ansible-playbook: error: unrecognized arguments: --ee-image bash",
        " ",
        "usage: ansible-playbook [-h] [--version] [-v] [--private-key PRIVATE_KEY_FILE]",
        "                        [-u REMOTE_USER] [-c CONNECTION] [-T TIMEOUT]",
        "                        [--ssh-common-args SSH_COMMON_ARGS]",
        "                        [--sftp-extra-args SFTP_EXTRA_ARGS]",
        "                        [--scp-extra-args SCP_EXTRA_ARGS]",
        "                        [--ssh-extra-args SSH_EXTRA_ARGS] [-k |",
        "                        --connection-password-file CONNECTION_PASSWORD_FILE]",
        "                        [--force-handlers] [--flush-cache] [-b]",
        "                        [--become-method BECOME_METHOD]",
        "                        [--become-user BECOME_USER] [-K |",
        "                        --become-password-file BECOME_PASSWORD_FILE] [-t TAGS]",
        "                        [--skip-tags SKIP_TAGS] [-C] [-D] [-i INVENTORY]",
        "                        [--list-hosts] [-l SUBSET] [-e EXTRA_VARS]",
        "                        [--vault-id VAULT_IDS] [-J |",
        "                        --vault-password-file VAULT_PASSWORD_FILES] [-f FORKS]",
        "                        [-M MODULE_PATH] [--syntax-check] [--list-tasks]",
        "                        [--list-tags] [--step] [--start-at-task START_AT_TASK]",
        "                        playbook [playbook ...]",
        "Runs Ansible playbooks, executing the defined tasks on the targeted hosts.",
        "positional arguments:",
        "  playbook              Playbook(s)",
        "options:",
        "  --become-password-file, --become-pass-file BECOME_PASSWORD_FILE",
        "                        Become password file",
        "  --connection-password-file, --conn-pass-file CONNECTION_PASSWORD_FILE",
        "                        Connection password file",
        "  --flush-cache         clear the fact cache for every host in inventory",
        "  --force-handlers      run handlers even if a task fails",
        "  --list-hosts          outputs a list of matching hosts; does not execute",
        "                        anything else",
        "  --list-tags           list all available tags",
        "  --list-tasks          list all tasks that would be executed",
        "  --skip-tags SKIP_TAGS",
        "                        only run plays and tasks whose tags do not match these",
        "                        values. This argument may be specified multiple times.",
        "  --start-at-task START_AT_TASK",
        "                        start the playbook at the task matching this name",
        "  --step                one-step-at-a-time: confirm each task before running",
        "  --syntax-check        perform a syntax check on the playbook, but do not",
        "                        execute it",
        "  --vault-id VAULT_IDS  the vault identity to use. This argument may be",
        "                        specified multiple times.",
        "  --vault-password-file, --vault-pass-file VAULT_PASSWORD_FILES",
        "                        vault password file",
        "  --version             show program's version number, config file location,",
        "                        configured module search path, module location,",
        "                        executable location and exit",
        "  -C, --check           don't make any changes; instead, try to predict some",
        "                        of the changes that may occur",
        "  -D, --diff            when changing (small) files and templates, show the",
        "                        differences in those files; works great with --check",
        "  -J, --ask-vault-password, --ask-vault-pass",
        "                        ask for vault password",
        "  -K, --ask-become-pass",
        "                        ask for privilege escalation password",
        "  -M, --module-path MODULE_PATH",
        "                        prepend colon-separated path(s) to module library",
        "                        (default={{ ANSIBLE_HOME ~",
        "                        \"/plugins/modules:/usr/share/ansible/plugins/modules\"",
        "                        }}). This argument may be specified multiple times.",
        "  -e, --extra-vars EXTRA_VARS",
        "                        set additional variables as key=value or YAML/JSON, if",
        "                        filename prepend with @. This argument may be",
        "                        specified multiple times.",
        "  -f, --forks FORKS     specify number of parallel processes to use",
        "                        (default=5)",
        "  -h, --help            show this help message and exit",
        "  -i, --inventory, --inventory-file INVENTORY",
        "                        specify inventory host path or comma separated host",
        "                        list. --inventory-file is deprecated. This argument",
        "                        may be specified multiple times.",
        "  -k, --ask-pass        ask for connection password",
        "  -l, --limit SUBSET    further limit selected hosts to an additional pattern",
        "  -t, --tags TAGS       only run plays and tasks tagged with these values.",
        "                        This argument may be specified multiple times.",
        "  -v, --verbose         Causes Ansible to print more debug messages. Adding",
        "                        multiple -v will increase the verbosity, the builtin",
        "                        plugins currently evaluate up to -vvvvvv. A reasonable",
        "                        level to start is -vvv, connection debugging might",
        "                        require -vvvv. This argument may be specified multiple",
        "                        times.",
        "Connection Options:",
        "  control as whom and how to connect to hosts",
        "  --private-key, --key-file PRIVATE_KEY_FILE",
        "                        use this file to authenticate the connection",
        "  --scp-extra-args SCP_EXTRA_ARGS",
        "                        specify extra arguments to pass to scp only (e.g. -l)",
        "  --sftp-extra-args SFTP_EXTRA_ARGS",
        "                        specify extra arguments to pass to sftp only (e.g. -f,",
        "                        -l)",
        "  --ssh-common-args SSH_COMMON_ARGS",
        "                        specify common arguments to pass to sftp/scp/ssh (e.g.",
        "                        ProxyCommand)",
        "  --ssh-extra-args SSH_EXTRA_ARGS",
        "                        specify extra arguments to pass to ssh only (e.g. -R)",
        "  -T, --timeout TIMEOUT",
        "                        override the connection timeout in seconds (default",
        "                        depends on connection)",
        "  -c, --connection CONNECTION",
        "                        connection type to use (default=ssh)",
        "  -u, --user REMOTE_USER",
        "                        connect as this user (default=None)",
        "Privilege Escalation Options:",
        "  control how and which user you become as on target hosts",
        "  --become-method BECOME_METHOD",
        "                        privilege escalation method to use (default=sudo), use",
        "                        `ansible-doc -t become -l` to list valid choices.",
        "  --become-user BECOME_USER",
        "                        run operations as this user (default=root)",
        "  -b, --become          run operations with become (does not imply password",
        "                        prompting)"
    ],
    "version": "2.0.0"
}
